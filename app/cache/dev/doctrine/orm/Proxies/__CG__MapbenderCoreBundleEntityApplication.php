<?php

namespace Proxies\__CG__\Mapbender\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Application extends \Mapbender\CoreBundle\Entity\Application implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'excludeFromList', 'yamlRoles', 'source', 'id', 'title', 'slug', 'description', 'template', 'regionProperties', 'elements', 'layersets', 'published', 'screenshot', 'extra_assets', 'screenshotFile', 'updated', 'custom_css', 'publicOptions'];
        }

        return ['__isInitialized__', 'excludeFromList', 'yamlRoles', 'source', 'id', 'title', 'slug', 'description', 'template', 'regionProperties', 'elements', 'layersets', 'published', 'screenshot', 'extra_assets', 'screenshotFile', 'updated', 'custom_css', 'publicOptions'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Application $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setSource($source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSource', [$source]);

        return parent::setSource($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getSource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSource', []);

        return parent::getSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', [$template]);

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', []);

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegionProperties(\Doctrine\Common\Collections\ArrayCollection $regionProperties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegionProperties', [$regionProperties]);

        return parent::setRegionProperties($regionProperties);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegionProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegionProperties', []);

        return parent::getRegionProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function addRegionProperties(\Mapbender\CoreBundle\Entity\RegionProperties $regionProperties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRegionProperties', [$regionProperties]);

        return parent::addRegionProperties($regionProperties);
    }

    /**
     * {@inheritDoc}
     */
    public function addElement(\Mapbender\CoreBundle\Entity\Element $element)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addElement', [$element]);

        return parent::addElement($element);
    }

    /**
     * {@inheritDoc}
     */
    public function getElements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getElements', []);

        return parent::getElements();
    }

    /**
     * {@inheritDoc}
     */
    public function setElements(\Doctrine\Common\Collections\ArrayCollection $elements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setElements', [$elements]);

        return parent::setElements($elements);
    }

    /**
     * {@inheritDoc}
     */
    public function addLayerset(\Mapbender\CoreBundle\Entity\Layerset $layerset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLayerset', [$layerset]);

        return parent::addLayerset($layerset);
    }

    /**
     * {@inheritDoc}
     */
    public function setLayersets(\Doctrine\Common\Collections\ArrayCollection $layersets)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLayersets', [$layersets]);

        return parent::setLayersets($layersets);
    }

    /**
     * {@inheritDoc}
     */
    public function getLayersets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLayersets', []);

        return parent::getLayersets();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreenshot($screenshot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreenshot', [$screenshot]);

        return parent::setScreenshot($screenshot);
    }

    /**
     * {@inheritDoc}
     */
    public function getScreenshot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreenshot', []);

        return parent::getScreenshot();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreenshotFile($screenshotFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreenshotFile', [$screenshotFile]);

        return parent::setScreenshotFile($screenshotFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getScreenshotFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreenshotFile', []);

        return parent::getScreenshotFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtraAssets(array $extra_assets = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtraAssets', [$extra_assets]);

        return parent::setExtraAssets($extra_assets);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtraAssets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtraAssets', []);

        return parent::getExtraAssets();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublished($published)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublished', [$published]);

        return parent::setPublished($published);
    }

    /**
     * {@inheritDoc}
     */
    public function isPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublished', []);

        return parent::isPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated(\DateTime $updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomCss($custom_css)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomCss', [$custom_css]);

        return parent::setCustomCss($custom_css);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomCss()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomCss', []);

        return parent::getCustomCss();
    }

    /**
     * {@inheritDoc}
     */
    public function filterElementCollection(\Doctrine\Common\Collections\Criteria $criteria, \Doctrine\Common\Collections\Collection $collection = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'filterElementCollection', [$criteria, $collection]);

        return parent::filterElementCollection($criteria, $collection);
    }

    /**
     * {@inheritDoc}
     */
    public function getElementsByRegion($region)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getElementsByRegion', [$region]);

        return parent::getElementsByRegion($region);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getNamedRegionProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNamedRegionProperties', []);

        return parent::getNamedRegionProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function getPropertiesFromRegion($regionName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPropertiesFromRegion', [$regionName]);

        return parent::getPropertiesFromRegion($regionName);
    }

    /**
     * {@inheritDoc}
     */
    public function setExcludeFromList($exclude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExcludeFromList', [$exclude]);

        return parent::setExcludeFromList($exclude);
    }

    /**
     * {@inheritDoc}
     */
    public function isExcludedFromList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExcludedFromList', []);

        return parent::isExcludedFromList();
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicOptions', []);

        return parent::getPublicOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicOptions($publicOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicOptions', [$publicOptions]);

        return parent::setPublicOptions($publicOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getYamlRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYamlRoles', []);

        return parent::getYamlRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setYamlRoles($yamlRoles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYamlRoles', [$yamlRoles]);

        return parent::setYamlRoles($yamlRoles);
    }

    /**
     * {@inheritDoc}
     */
    public function isYamlBased()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isYamlBased', []);

        return parent::isYamlBased();
    }

    /**
     * {@inheritDoc}
     */
    public function isDbBased()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDbBased', []);

        return parent::isDbBased();
    }

    /**
     * {@inheritDoc}
     */
    public function getMapEngineCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMapEngineCode', []);

        return parent::getMapEngineCode();
    }

    /**
     * {@inheritDoc}
     */
    public function bumpUpdate(\Doctrine\Common\Persistence\Event\LifecycleEventArgs $args)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'bumpUpdate', [$args]);

        return parent::bumpUpdate($args);
    }

}
