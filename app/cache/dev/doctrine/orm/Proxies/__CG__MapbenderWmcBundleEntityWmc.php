<?php

namespace Proxies\__CG__\Mapbender\WmcBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Wmc extends \Mapbender\WmcBundle\Entity\Wmc implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'version', 'wmcid', 'state', 'keywords', 'abstract', 'logourl', 'descriptionurl', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'screenshotPath', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'screenshot', 'contact', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'xml', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'public'];
        }

        return ['__isInitialized__', 'id', 'version', 'wmcid', 'state', 'keywords', 'abstract', 'logourl', 'descriptionurl', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'screenshotPath', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'screenshot', 'contact', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'xml', '' . "\0" . 'Mapbender\\WmcBundle\\Entity\\Wmc' . "\0" . 'public'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Wmc $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setKeywords($keywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKeywords', [$keywords]);

        return parent::setKeywords($keywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKeywords', []);

        return parent::getKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbstract($abstract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbstract', [$abstract]);

        return parent::setAbstract($abstract);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbstract()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbstract', []);

        return parent::getAbstract();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogourl(\Mapbender\WmsBundle\Component\LegendUrl $logourl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogourl', [$logourl]);

        return parent::setLogourl($logourl);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogourl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogourl', []);

        return parent::getLogourl();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptionurl(\Mapbender\WmsBundle\Component\OnlineResource $descriptionURL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptionurl', [$descriptionURL]);

        return parent::setDescriptionurl($descriptionURL);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptionurl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptionurl', []);

        return parent::getDescriptionurl();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreenshotPath($screenShotPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreenshotPath', [$screenShotPath]);

        return parent::setScreenshotPath($screenShotPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getScreenshotPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreenshotPath', []);

        return parent::getScreenshotPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreenshot($screenshot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreenshot', [$screenshot]);

        return parent::setScreenshot($screenshot);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', []);

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', [$version]);

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getWmcid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWmcid', []);

        return parent::getWmcid();
    }

    /**
     * {@inheritDoc}
     */
    public function setWmcid($wmcid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWmcid', [$wmcid]);

        return parent::setWmcid($wmcid);
    }

    /**
     * {@inheritDoc}
     */
    public function setContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', [$contact]);

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', []);

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setXml($xml)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXml', [$xml]);

        return parent::setXml($xml);
    }

    /**
     * {@inheritDoc}
     */
    public function getXml()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXml', []);

        return parent::getXml();
    }

    /**
     * {@inheritDoc}
     */
    public function getScreenshot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreenshot', []);

        return parent::getScreenshot();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublic($public)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublic', [$public]);

        return parent::setPublic($public);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublic', []);

        return parent::getPublic();
    }

}
