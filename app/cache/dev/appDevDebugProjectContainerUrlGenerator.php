<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_assetic_9047f2f' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9047f2f',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/9047f2f.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9047f2f_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9047f2f',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/9047f2f_bootstrap.min_1.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_9047f2f_1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => '9047f2f',    'pos' => 1,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/9047f2f_font-awesome.min_2.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_start' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\WelcomeController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_application_assets' => array (  0 =>   array (    0 => 'slug',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\ApplicationController::assetsAction',  ),  2 =>   array (    'type' => 'js|css|trans',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => 'js|css|trans',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/assets',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_application_element' => array (  0 =>   array (    0 => 'slug',    1 => 'id',    2 => 'action',  ),  1 =>   array (    'id' => NULL,    'action' => NULL,    '_controller' => 'Mapbender\\CoreBundle\\Controller\\ApplicationController::elementAction',  ),  2 =>   array (    'action' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'action',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/element',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_application_application' => array (  0 =>   array (    0 => 'slug',    1 => '_format',  ),  1 =>   array (    '_format' => 'html',    '_controller' => 'Mapbender\\CoreBundle\\Controller\\ApplicationController::applicationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_application_configuration' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\ApplicationController::configurationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_application_metadata' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\ApplicationController::metadataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/metadata',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_application_instancetunnel' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\ApplicationController::instanceTunnelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tunnel',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    2 =>     array (      0 => 'text',      1 => '/instance',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_application_instancetunnellegend' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',    2 => 'layerId',  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\ApplicationController::instanceTunnelLegendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layerId',    ),    1 =>     array (      0 => 'text',      1 => '/tunnel/legend',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    3 =>     array (      0 => 'text',      1 => '/instance',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    5 =>     array (      0 => 'text',      1 => '/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_login_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\LoginController::loginAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_login_logincheck' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\LoginController::loginCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/login/check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_login_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\LoginController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_core_welcome_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\CoreBundle\\Controller\\WelcomeController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/applications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/application/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::exportAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/application/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::importAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/application/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_copydirectly' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::copyDirectlyAction',  ),  2 =>   array (    'slug' => '[\\w-]+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/copydirectly',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[\\w-]+',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_edit' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::editAction',  ),  2 =>   array (    'slug' => '[\\w-]+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[\\w-]+',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_update' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::updateAction',  ),  2 =>   array (    'slug' => '[\\w-]+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[\\w-]+',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_togglestate' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::toggleStateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/state',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_delete' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::deleteAction',  ),  2 =>   array (    'slug' => '[\\w-]+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[\\w-]+',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_newlayerset' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::newLayersetAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/layerset/new',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_editlayerset' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::editLayersetAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    2 =>     array (      0 => 'text',      1 => '/layerset',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_savelayerset' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::saveLayersetAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/layerset/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_savelayerset_1' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',  ),  1 =>   array (    'layersetId' => NULL,    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::saveLayersetAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/save',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    2 =>     array (      0 => 'text',      1 => '/layerset',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_confirmdeletelayerset' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::confirmDeleteLayersetAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    2 =>     array (      0 => 'text',      1 => '/layerset',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_deletelayerset' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::deleteLayersetAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    2 =>     array (      0 => 'text',      1 => '/layerset',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_listsources' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::listSourcesAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/list',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    2 =>     array (      0 => 'text',      1 => '/layerset',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_addinstance' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',    2 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::addInstanceAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/source',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    4 =>     array (      0 => 'text',      1 => '/layerset',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    6 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_deleteinstance' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',    2 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::deleteInstanceAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    2 =>     array (      0 => 'text',      1 => '/instance',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    4 =>     array (      0 => 'text',      1 => '/layerset',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    6 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_application_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ApplicationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_select' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::selectAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/element/select',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_new' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/element/new',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_create' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/element/new',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_edit' => array (  0 =>   array (    0 => 'slug',    1 => 'id',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/element',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_update' => array (  0 =>   array (    0 => 'slug',    1 => 'id',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::updateAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/element',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_security' => array (  0 =>   array (    0 => 'slug',    1 => 'id',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::securityAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/security',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/element',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_delete' => array (  0 =>   array (    0 => 'slug',    1 => 'id',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::deleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/element',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_weight' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::weightAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/weight',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application/element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_element_enable' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\ElementController::enableAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/enable',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/application/element',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_index_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\IndexController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_index' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::indexAction',  ),  2 =>   array (    'page' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/manager/repository',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/repository/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_create' => array (  0 =>   array (    0 => 'managertype',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'managertype',    ),    1 =>     array (      0 => 'text',      1 => '/manager/repository/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_view' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::viewAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    1 =>     array (      0 => 'text',      1 => '/manager/repository/source',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_confirmdelete' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::confirmdeleteAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/confirmdelete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/source',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_delete' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::deleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/source',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_updateform' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::updateformAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateform',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/source',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_update' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/source',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_instance' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::instanceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    1 =>     array (      0 => 'text',      1 => '/instance',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/manager/repository/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_instanceweight' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',    2 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::instanceWeightAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    1 =>     array (      0 => 'text',      1 => '/weight',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    3 =>     array (      0 => 'text',      1 => '/instance',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    5 =>     array (      0 => 'text',      1 => '/manager/repository/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_instanceenabled' => array (  0 =>   array (    0 => 'slug',    1 => 'layersetId',    2 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::instanceEnabledAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    1 =>     array (      0 => 'text',      1 => '/enabled',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layersetId',    ),    3 =>     array (      0 => 'text',      1 => '/instance',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    5 =>     array (      0 => 'text',      1 => '/manager/repository/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_manager_repository_instancelayerweight' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',    2 => 'instLayerId',  ),  1 =>   array (    '_controller' => 'Mapbender\\ManagerBundle\\Controller\\RepositoryController::instanceLayerWeightAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instLayerId',    ),    1 =>     array (      0 => 'text',      1 => '/weight',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    3 =>     array (      0 => 'text',      1 => '/instanceLayer',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    5 =>     array (      0 => 'text',      1 => '/manager/repository/application',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/repository/wms/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_start' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::startAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/repository/wms/start',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_view' => array (  0 =>   array (    0 => 'wms',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::viewAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '',      2 => '[^/]++',      3 => 'wms',    ),    1 =>     array (      0 => 'text',      1 => '/manager/repository/wms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/repository/wms/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_updateform' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::updateformAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updateform',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/wms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_update' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/wms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_delete' => array (  0 =>   array (    0 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::deleteAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/wms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_deleteinstance' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::deleteInstanceAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    2 =>     array (      0 => 'text',      1 => '/instance',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    4 =>     array (      0 => 'text',      1 => '/manager/repository/wms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_instance' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::instanceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/manager/repository/wms/instance',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_instancelayerpriority' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',    2 => 'instLayerId',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::instanceLayerPriorityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instLayerId',    ),    1 =>     array (      0 => 'text',      1 => '/priority',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    3 =>     array (      0 => 'text',      1 => '/instance',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    5 =>     array (      0 => 'text',      1 => '/manager/repository/wms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mapbender_wms_repository_instanceenabled' => array (  0 =>   array (    0 => 'slug',    1 => 'instanceId',  ),  1 =>   array (    '_controller' => 'Mapbender\\WmsBundle\\Controller\\RepositoryController::instanceEnabledAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instanceId',    ),    1 =>     array (      0 => 'text',      1 => '/enabled',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    3 =>     array (      0 => 'text',      1 => '/manager/repository/wms/instance',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'srs_autocomplete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mapbender\\CoordinatesUtilityBundle\\Controller\\CoordinatesUtilityController::srsAutocompleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/srs-autocomplete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_acl_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\ACLController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/acl',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_acl_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\ACLController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/acl/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_acl_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\ACLController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/acl/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_acl_overview' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\ACLController::overviewAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/acl/overview',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_acl_aclsid' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\ACLController::aclsidAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/acl/sid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_group_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\GroupController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_group_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\GroupController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/group/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_group_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\GroupController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_group_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\GroupController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_group_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\GroupController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_group_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\GroupController::deleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_password_send' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\PasswordController::sendAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/password/send',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_password_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\PasswordController::formAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_password_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\PasswordController::requestAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_password_tokenreset' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\PasswordController::tokenResetAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/reset/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_password_reset' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\PasswordController::resetAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_password_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\PasswordController::passwordAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_password_done' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\PasswordController::doneAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/reset/done',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_registration_send' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\RegistrationController::sendAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/registration/send',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_registration_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\RegistrationController::formAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/registration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\RegistrationController::register',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/registration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_registration_confirm' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_registration_reset' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\RegistrationController::reset',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/registration/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_registration_done' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\RegistrationController::doneAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/registration/done',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_user_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\UserController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_user_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\UserController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/user/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_user_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\UserController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_user_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\UserController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_user_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\UserController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fom_user_user_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FOM\\UserBundle\\Controller\\UserController::deleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/manager/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'owsproxy3_core_owsproxy_entrypoint' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OwsProxy3\\CoreBundle\\Controller\\OwsProxyController::entryPointAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/owsproxy/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
