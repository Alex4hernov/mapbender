<?php

namespace Proxies\__CG__\Mapbender\WmsBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class WmsInstanceLayer extends \Mapbender\WmsBundle\Entity\WmsInstanceLayer implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'sourceInstance', 'sourceItem', 'parent', 'sublayer', 'title', 'active', 'allowselected', 'selected', 'info', 'allowinfo', 'toggle', 'allowtoggle', 'allowreorder', 'minScale', 'maxScale', 'style', 'priority'];
        }

        return ['__isInitialized__', 'id', 'sourceInstance', 'sourceItem', 'parent', 'sublayer', 'title', 'active', 'allowselected', 'selected', 'info', 'allowinfo', 'toggle', 'allowtoggle', 'allowreorder', 'minScale', 'maxScale', 'style', 'priority'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (WmsInstanceLayer $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function postLoad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'postLoad', []);

        return parent::postLoad();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSublayer($sublayer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSublayer', [$sublayer]);

        return parent::setSublayer($sublayer);
    }

    /**
     * {@inheritDoc}
     */
    public function addSublayer(\Mapbender\WmsBundle\Entity\WmsInstanceLayer $sublayer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSublayer', [$sublayer]);

        return parent::addSublayer($sublayer);
    }

    /**
     * {@inheritDoc}
     */
    public function getSublayer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSublayer', []);

        return parent::getSublayer();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowselected($allowselected)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowselected', [$allowselected]);

        return parent::setAllowselected($allowselected);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowselected()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowselected', []);

        return parent::getAllowselected();
    }

    /**
     * {@inheritDoc}
     */
    public function setSelected($selected)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelected', [$selected]);

        return parent::setSelected($selected);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelected()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelected', []);

        return parent::getSelected();
    }

    /**
     * {@inheritDoc}
     */
    public function setInfo($info)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfo', [$info]);

        return parent::setInfo($info);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfo', []);

        return parent::getInfo();
    }

    /**
     * {@inheritDoc}
     */
    public function getToggle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToggle', []);

        return parent::getToggle();
    }

    /**
     * {@inheritDoc}
     */
    public function setToggle($toggle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToggle', [$toggle]);

        return parent::setToggle($toggle);
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowinfo($allowinfo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowinfo', [$allowinfo]);

        return parent::setAllowinfo($allowinfo);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowinfo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowinfo', []);

        return parent::getAllowinfo();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowtoggle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowtoggle', []);

        return parent::getAllowtoggle();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowtoggle($allowtoggle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowtoggle', [$allowtoggle]);

        return parent::setAllowtoggle($allowtoggle);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowreorder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowreorder', []);

        return parent::getAllowreorder();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowreorder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowreorder', [$value]);

        return parent::setAllowreorder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMinScale($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinScale', [$value]);

        return parent::setMinScale($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinScale($recursive = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinScale', [$recursive]);

        return parent::getMinScale($recursive);
    }

    /**
     * {@inheritDoc}
     */
    public function getInheritedMinScale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInheritedMinScale', []);

        return parent::getInheritedMinScale();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxScale($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxScale', [$value]);

        return parent::setMaxScale($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxScale($recursive = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxScale', [$recursive]);

        return parent::getMaxScale($recursive);
    }

    /**
     * {@inheritDoc}
     */
    public function getInheritedMaxScale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInheritedMaxScale', []);

        return parent::getInheritedMaxScale();
    }

    /**
     * {@inheritDoc}
     */
    public function setStyle($style)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStyle', [$style]);

        return parent::setStyle($style);
    }

    /**
     * {@inheritDoc}
     */
    public function getStyle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStyle', []);

        return parent::getStyle();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourceInstance(\Mapbender\CoreBundle\Entity\SourceInstance $sourceInstance = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourceInstance', [$sourceInstance]);

        return parent::setSourceInstance($sourceInstance);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceInstance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceInstance', []);

        return parent::getSourceInstance();
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceItem()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceItem', []);

        return parent::getSourceItem();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourceItem(\Mapbender\CoreBundle\Entity\SourceItem $sourceItem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourceItem', [$sourceItem]);

        return parent::setSourceItem($sourceItem);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function populateFromSource(\Mapbender\WmsBundle\Entity\WmsInstance $instance, \Mapbender\WmsBundle\Entity\WmsLayerSource $layerSource, $priority = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'populateFromSource', [$instance, $layerSource, $priority]);

        return parent::populateFromSource($instance, $layerSource, $priority);
    }

    /**
     * {@inheritDoc}
     */
    public function isRoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRoot', []);

        return parent::isRoot();
    }

}
